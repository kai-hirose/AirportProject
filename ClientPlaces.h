/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CLIENTPLACES_H_RPCGEN
#define _CLIENTPLACES_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct airport {
	int code;
	char *name;
	double lat;
	double lon;
	double distance;
};
typedef struct airport airport;

struct airportList {
	int error;
	airport array[5];
};
typedef struct airportList airportList;

struct KDNode {
	struct KDNode *right;
	struct KDNode *left;
	double lat;
	double lon;
};
typedef struct KDNode KDNode;

struct TrieNode {
	struct TrieNode *TN;
	int index;
	double lat;
	double lon;
};
typedef struct TrieNode TrieNode;

#define AIRPORT_PROG 0x32320776
#define AIRPORT_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define callPlaces 1
extern  airportList * callplaces_1(char *, CLIENT *);
extern  airportList * callplaces_1_svc(char *, struct svc_req *);
extern int airport_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define callPlaces 1
extern  airportList * callplaces_1();
extern  airportList * callplaces_1_svc();
extern int airport_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_airport (XDR *, airport*);
extern  bool_t xdr_airportList (XDR *, airportList*);
extern  bool_t xdr_KDNode (XDR *, KDNode*);
extern  bool_t xdr_TrieNode (XDR *, TrieNode*);

#else /* K&R C */
extern bool_t xdr_airport ();
extern bool_t xdr_airportList ();
extern bool_t xdr_KDNode ();
extern bool_t xdr_TrieNode ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CLIENTPLACES_H_RPCGEN */

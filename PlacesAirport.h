/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PLACESAIRPORT_H_RPCGEN
#define _PLACESAIRPORT_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct airportPA {
	char *code;
	char *name;
	double lat;
	double lon;
	double distance;
};
typedef struct airportPA airportPA;

struct returnPA {
	int error;
	airportPA array[5];
};
typedef struct returnPA returnPA;

struct coordinate {
	double lat;
	double lon;
};
typedef struct coordinate coordinate;

typedef struct kDNode *kDNodePtr;

struct kDNode {
	kDNodePtr right;
	kDNodePtr left;
	airportPA airport;
};
typedef struct kDNode kDNode;

#define AIRPORT_PROG 0x3232077B
#define AIRPORT_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define callAirport 1
extern  returnPA * callairport_1(coordinate *, CLIENT *);
extern  returnPA * callairport_1_svc(coordinate *, struct svc_req *);
extern int airport_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define callAirport 1
extern  returnPA * callairport_1();
extern  returnPA * callairport_1_svc();
extern int airport_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_airportPA (XDR *, airportPA*);
extern  bool_t xdr_returnPA (XDR *, returnPA*);
extern  bool_t xdr_coordinate (XDR *, coordinate*);
extern  bool_t xdr_kDNodePtr (XDR *, kDNodePtr*);
extern  bool_t xdr_kDNode (XDR *, kDNode*);

#else /* K&R C */
extern bool_t xdr_airportPA ();
extern bool_t xdr_returnPA ();
extern bool_t xdr_coordinate ();
extern bool_t xdr_kDNodePtr ();
extern bool_t xdr_kDNode ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_PLACESAIRPORT_H_RPCGEN */
